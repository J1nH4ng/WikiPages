import{f as o,D as a,c as n,o as b,aq as t,H as l}from"./chunks/framework.D90EkY4s.js";const g=JSON.parse('{"title":"RabbitMQ 插件安装配置","description":"RabbitMQ 插件安装配置文档","frontmatter":{"title":"RabbitMQ 插件安装配置","editLink":true,"description":"RabbitMQ 插件安装配置文档","layout":"doc","head":[["meta",{"name":"keywords","content":"Middleware, RabbitMQ"}]],"outline":"deep","prev":{"text":null,"link":null},"next":{"text":null,"link":null}},"headers":[],"relativePath":"posts/43ac60be.md","filePath":"docs/middleware/rabbitmq/plugins.md","lastUpdated":1743144118000}'),r={name:"posts/43ac60be.md"};function c(d,e,u,p,f,h){const i=a("NolebaseGitContributors"),s=a("NolebaseGitChangelog");return b(),n("div",null,[e[0]||(e[0]=t('<h1 id="rabbitmq-插件安装文档" tabindex="-1">RabbitMQ 插件安装文档 <a class="header-anchor" href="#rabbitmq-插件安装文档" aria-label="Permalink to &quot;RabbitMQ 插件安装文档&quot;">​</a></h1><h2 id="常用插件介绍" tabindex="-1">常用插件介绍 <a class="header-anchor" href="#常用插件介绍" aria-label="Permalink to &quot;常用插件介绍&quot;">​</a></h2><p>RabbitMQ 支持许多插件，这些插件可以拓展 RabbitMQ 的功能和特性，常用地插件如下：</p><ul><li>Management Plugin：该插件提供了一个 Web 管理界面，用于监控和管理 RabbitMQ 服务器，可以查看队列、交换机、连接、通道等的状态，并进行配置和操作。</li><li>Shovel Plugin: 该插件用于将信息从一个 RabbitMQ 服务器传递给另一个 RabbitMQ 服务器，实现消息复制和跨集群通信。可以用于实现数据复制、故障恢复、数据中心间同步等。</li><li>Federation Plugin：该插件允许不同的 RabbitMQ 集群之间建立联合，实现消息的跨集群传递。这对于构建分布式系统、将消息从一个地理位置传递到另一个地址位置非常有用。</li><li>STOMP Plugin：该插件允许使用 STOMP 协议与 RabbitMQ 进行通信。这对于使用非 AMQP 协议的客户端与 RabbitMQ 交互非常有用，例如使用 WebSocket 的 Web 应用程序。</li><li>Prometheus Plugin：该插件用于将 RabbitMQ 的性能指标导出到 Prometheus 监控系统，以便于进行性能监控和警报。</li><li>Delayed Message Plugin：该插件允许发布延迟交付的消息，使得可以在稍后的时间点将消息传递给消费者。这对于实现定时任务、延迟重试等场景非常有用。</li></ul><h2 id="具体安装配置" tabindex="-1">具体安装配置 <a class="header-anchor" href="#具体安装配置" aria-label="Permalink to &quot;具体安装配置&quot;">​</a></h2><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> Management Plugin</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" disabled="true"><label for="cbx_1"> Shovel Plugin</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true"><label for="cbx_2"> Federation Plugin</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" disabled="true"><label for="cbx_3"> STOMP Plugin</label></li><li class="task-list-item"><input type="checkbox" id="cbx_4" disabled="true"><label for="cbx_4"> Prometheus Plugin</label></li><li class="task-list-item"><input type="checkbox" id="cbx_5" checked="true" disabled="true"><label for="cbx_5"> Delayed Message Plugin</label></li></ul><h3 id="delayed-message-plugin" tabindex="-1">Delayed Message Plugin <a class="header-anchor" href="#delayed-message-plugin" aria-label="Permalink to &quot;Delayed Message Plugin&quot;">​</a></h3><div class="important custom-block github-alert"><p class="custom-block-title">注意事项：</p><p></p><p>此插件旨在将消息延迟几秒钟、几分钟或几小时，最多一两天。</p><p>这不是一个长期的调度解决方案。如果你需要将发布延迟数天、数周、数月或者数年，请考虑使用适合长期存储的数据存储或某种外部计划工具。</p></div><p>Mnesia<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>Khepri<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>',10)),l(i),l(s),e[1]||(e[1]=t('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Mnesia 是 Erlang 内置的分布式数据库，设计初衷是为电信系统提供高可用和实时性。它是一个功能强大且易于使用的键值存储，支持内存和磁盘存储，广泛用于早期的 RabbitMQ 等应用。然而，Mnesia 在处理网络分区时存在局限性，特别是在数据一致性方面。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Khepri 是 RabbitMQ 团队开发的新数据库，旨在替换 Mnesia，解决其在分布式环境下的不足。Khepri 基于 Raft 共识算法，专注于提供更高的数据一致性和网络分区容错能力，特别适用于 RabbitMQ 的元数据存储。<strong>在 RabbitMQ 4.0 及更高版本中得到完全支持</strong>。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>',2))])}const M=o(r,[["render",c]]);export{g as __pageData,M as default};
