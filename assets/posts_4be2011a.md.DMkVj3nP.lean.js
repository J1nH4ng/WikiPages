import{_ as k,C as p,c as r,o as d,aD as a,j as i,G as n,a as e}from"./chunks/framework.Cvnqwbck.js";const D=JSON.parse('{"title":"Docker 安装配置文档","description":"Docker 安装配置文档","frontmatter":{"title":"Docker 安装配置文档","editLink":true,"description":"Docker 安装配置文档","layout":"doc","head":[["meta",{"name":"keywords","content":"Linux, Docker, Cloud, CNCF"}]],"outline":"deep","prev":{"text":null,"link":null},"next":{"text":null,"link":null}},"headers":[],"relativePath":"posts/4be2011a.md","filePath":"docs/cloud/docker/install.md","lastUpdated":1745309765000}'),o={name:"posts/4be2011a.md"},c={href:"/files/systemd/docker/docker.socket",download:"docker.socket"},b={href:"/files/systemd/docker/containerd.service",download:"containerd.service"},y={href:"/files/systemd/docker/docker.service",download:"docker.service"},g={href:"/files/docker/daemon.json",download:"daemon.json"};function u(m,s,A,E,C,v){const l=p("Icon"),t=p("NolebaseGitContributors"),h=p("NolebaseGitChangelog");return d(),r("div",null,[s[12]||(s[12]=a('<h1 id="docker-的安装与配置" tabindex="-1">Docker 的安装与配置 <a class="header-anchor" href="#docker-的安装与配置" aria-label="Permalink to &quot;Docker 的安装与配置&quot;">​</a></h1><h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><p>Docker 安装有多种方式，这里推荐使用 <code>yum</code> 安装，如果无法通过 <code>yum</code> 安装，可以选择二进制安装。</p><h3 id="安装-yum" tabindex="-1">安装（YUM） <a class="header-anchor" href="#安装-yum" aria-label="Permalink to &quot;安装（YUM）&quot;">​</a></h3><ol><li><p>先添加 Docker 官方仓库</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">yum-config-manager</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> --add-repo</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> https://download.docker.com/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>修改源文件</p><p>由于并不是原生的 CentOS 系统，所以需要手动指定源文件中的版本以下载正确的 Docker</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">vim</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /etc/yum.repos.d/docker-ce.repo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行如下命令批量查询替换</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">:1,$s/\\$releasever/7/g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>查询 Docker 版本</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">yum</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> list</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker-ce</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> --showduplicates</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> |</span><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;"> sort</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -r</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>安装 Docker</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">yum</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -y</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> install</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker-ce</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>启用 Docker</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">systemctl</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> enable</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> --now</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="安装-二进制" tabindex="-1">安装（二进制） <a class="header-anchor" href="#安装-二进制" aria-label="Permalink to &quot;安装（二进制）&quot;">​</a></h3>',6)),i("ol",null,[s[7]||(s[7]=a(`<li><p>下载 Docker 二进制文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B4637A;--shiki-light-font-style:italic;--shiki-dark:#EB6F92;--shiki-dark-font-style:italic;">cd</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/local/src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">wget</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -c</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> https://download.docker.com/linux/static/stable/x86_64/docker-28.1.1.tgz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>解压该文件并授予权限</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">tar</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -zxvf</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker-28.1.1.tgz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">chown</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> root:root</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker/</span><span style="--shiki-light:#575279;--shiki-light-font-style:italic;--shiki-dark:#E0DEF4;--shiki-dark-font-style:italic;">*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>移动至环境变量中</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">cp</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -p</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker/</span><span style="--shiki-light:#575279;--shiki-light-font-style:italic;--shiki-dark:#E0DEF4;--shiki-dark-font-style:italic;">*</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/bin/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block github-alert"><p class="custom-block-title">小技巧：</p><p></p><p>cp -p 命令的 <code>-p</code> 选项表示保持源文件属性，包括权限、时间戳等。</p></div></li><li><p>创建 Docker 用户组</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">groupadd</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li>`,4)),i("li",null,[s[6]||(s[6]=i("p",null,"配置 Docker 相关文件服务",-1)),i("ol",null,[i("li",null,[i("p",null,[i("a",c,[s[0]||(s[0]=e("Docker Socket 文件")),n(l,{icon:"line-md:downloading-loop"})])]),s[1]||(s[1]=a(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">vim</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/lib/systemd/system/docker.socket</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>写入如下内容：</p><div class="language-ini vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Unit</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Description</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">Docker Socket for the API</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Socket</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">ListenStream</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">/var/run/docker.sock</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">SocketMode</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">0660</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">SocketUser</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">root</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">SocketGroup</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Install</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">WantedBy</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">sockets.target</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,3))]),i("li",null,[i("p",null,[i("a",b,[s[2]||(s[2]=e("Containerd Service 文件 ")),n(l,{icon:"line-md:downloading-loop"})])]),s[3]||(s[3]=a(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">vim</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/lib/systemd/system/containerd.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>写入如下内容：</p><div class="language-ini vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Unit</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Description</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">containerd container runtime</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Documentation</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">https://containerd.io</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">After</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">network.target local-fs.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Service</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">ExecStartPre</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">-/sbin/modprobe overlay</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">ExecStart</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">/usr/bin/containerd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Type</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">notify</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Delegate</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">yes</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">KillMode</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">process</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Restart</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">always</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">RestartSec</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-light-font-style:italic;--shiki-dark:#908CAA;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#9893A5;--shiki-light-font-style:italic;--shiki-dark:#6E6A86;--shiki-dark-font-style:italic;"> Having non-zero Limit*s causes performance problems due to accounting overhead</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-light-font-style:italic;--shiki-dark:#908CAA;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#9893A5;--shiki-light-font-style:italic;--shiki-dark:#6E6A86;--shiki-dark-font-style:italic;"> in the kernel. We recommend using cgroups to do container-local accounting.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitNOFILE</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitNPROC</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitCORE</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-light-font-style:italic;--shiki-dark:#908CAA;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#9893A5;--shiki-light-font-style:italic;--shiki-dark:#6E6A86;--shiki-dark-font-style:italic;"> Comment TasksMax if your systemd version does not support it.</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-light-font-style:italic;--shiki-dark:#908CAA;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#9893A5;--shiki-light-font-style:italic;--shiki-dark:#6E6A86;--shiki-dark-font-style:italic;"> Only systemd 226 and later support this option.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">TasksMax</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">OOMScoreAdjust</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">-999</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Install</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">WantedBy</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">multi-user.target</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,3))]),i("li",null,[i("p",null,[i("a",y,[s[4]||(s[4]=e("Docker Service 文件")),n(l,{icon:"line-md:downloading-loop"})])]),s[5]||(s[5]=a(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">vim</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/lib/systemd/system/docker.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>写入如下内容：</p><div class="language-ini vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Unit</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Description</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">Docker Application Container Engine</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Documentation</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">https://docs.docker.com</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">After</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">network-online.target docker.socket firewalld.service containerd.service</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Wants</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">network-online.target</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Requires</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">docker.socket containerd.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Service</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Type</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">notify</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">ExecStart</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">/usr/bin/dockerd -H fd:// --</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">containerd</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">/run/containerd/containerd.sock</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">ExecReload</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">/bin/kill -s HUP $MAINPID</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">TimeoutStartSec</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">0</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">RestartSec</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">2</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Restart</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">always</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">StartLimitBurst</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">StartLimitInterval</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">60s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitNOFILE</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitNPROC</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">LimitCORE</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">TasksMax</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">Delegate</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">KillMode</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">process</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">OOMScoreAdjust</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">-500</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">[</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">Install</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;">WantedBy</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">=</span><span style="--shiki-light:#575279;--shiki-dark:#E0DEF4;">multi-user.target</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,3))])])]),s[8]||(s[8]=a(`<li><p>配置完成后启动 Docker 服务</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">systemctl</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">systemctl</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> enable</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> docker</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> --now</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>`,1))]),s[13]||(s[13]=a('<h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>Docker 安装完成之后，还需要配置 <code>daemon.json</code> 文件，用于实现如下修改：</p><ul><li>存储位置修改</li><li>Docker 容器内 IP 变更</li><li>日志大小变更</li><li>私有仓库配置</li><li>镜像仓库配置</li></ul>',3)),i("p",null,[s[10]||(s[10]=e("修改 ")),i("a",g,[s[9]||(s[9]=i("code",null,"daemon.json",-1)),n(l,{icon:"line-md:downloading-loop"})]),s[11]||(s[11]=e(" 文件，如果没有则创建："))]),s[14]||(s[14]=a(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">mkdir</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -p</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /etc/docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">vim</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /etc/docker/daemon.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>写入如下内容：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">{</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">data-root</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> &quot;/data/docker&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">,</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">registry-mirrors</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;"> [</span></span>
<span class="line"><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;">    &quot;https://dp.4r3al.team&quot;</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  ],</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">bip</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> &quot;172.18.1.1/24&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">,</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">insecure-registries</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;"> [</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;">&quot;192.168.50.120:3380&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">],</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">log-opts</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;"> {</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">    &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">max-size</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> &quot;150m&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">,</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">    &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">max-file</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  },</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">  &quot;</span><span style="--shiki-light:#56949F;--shiki-dark:#9CCFD8;">exec-opts</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">:</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;"> [</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;">&quot;native.cgroupdriver=systemd&quot;</span><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">]</span></span>
<span class="line"><span style="--shiki-light:#797593;--shiki-dark:#908CAA;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="安装-docker-compose" tabindex="-1">安装 Docker Compose <a class="header-anchor" href="#安装-docker-compose" aria-label="Permalink to &quot;安装 Docker Compose&quot;">​</a></h2><p>Docker Compose 是 Docker 官方提供的编排工具，可以方便地管理 Docker 容器。</p><p>新版的 Docker 安装包中已经包含了 Docker Compose，无需单独安装。</p><p>执行如下命令查看：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">docker</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> compose</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也可以安装单独的 Docker Compose 包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">curl</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -SL</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> https://github.com/docker/compose/releases/download/v2.35.0/docker-compose-linux-x86_64</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -o</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/local/bin/docker-compose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">chmod</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> +x</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/local/bin/docker-compose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">ln</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -s</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/local/bin/docker-compose</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /usr/bin/docker-compose</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,10)),n(t),n(h)])}const B=k(o,[["render",u]]);export{D as __pageData,B as default};
