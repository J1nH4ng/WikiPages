import{_ as n,C as o,c as i,o as l,aq as c,G as a}from"./chunks/framework.pQnWedaC.js";const f=JSON.parse('{"title":"Docker 网络配置详解","description":"Docker 网络配置详解文档","frontmatter":{"title":"Docker 网络配置详解","editLink":true,"description":"Docker 网络配置详解文档","layout":"doc","head":[["meta",{"name":"keywords","content":"Linux, Docker, Cloud, CNCF, Network"}]],"outline":"deep","prev":{"text":null,"link":null},"next":{"text":null,"link":null}},"headers":[],"relativePath":"posts/7403161d.md","filePath":"docs/cloud/docker/docker-networks.md","lastUpdated":1747706975000}'),s={name:"posts/7403161d.md"};function d(h,e,u,k,p,b){const t=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return l(),i("div",null,[e[0]||(e[0]=c('<h1 id="docker-网络详解" tabindex="-1">Docker 网络详解 <a class="header-anchor" href="#docker-网络详解" aria-label="Permalink to &quot;Docker 网络详解&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">前言：</p><p></p><p>Docker 网络是在 Docker 容器内实现网络通信和连接的重要组成部分。它提供了多种网络模式和配置选项，使得容器可以与其他容器、主机以及外部网络进行通信，在实际应用中，通过选择合适的网络类型和配置参数，可以构建高效、安全、可拓展的 Docker 网络解决方案。</p></div><h2 id="网络模式" tabindex="-1">网络模式 <a class="header-anchor" href="#网络模式" aria-label="Permalink to &quot;网络模式&quot;">​</a></h2><p>Docker run 创建 Docker 容器时，可以使用 <code>--net</code> 选项指定容器的网络模式，Docker 主要有以下四种网络模式：</p><ul><li>bridge 模式</li><li>host 模式</li><li>container 模式</li><li>none 模式</li></ul><p>不同的模式区别详解如下：</p><h3 id="bridge-模式" tabindex="-1">bridge 模式 <a class="header-anchor" href="#bridge-模式" aria-label="Permalink to &quot;bridge 模式&quot;">​</a></h3><h3 id="host-模式" tabindex="-1">host 模式 <a class="header-anchor" href="#host-模式" aria-label="Permalink to &quot;host 模式&quot;">​</a></h3><h3 id="container-模式" tabindex="-1">container 模式 <a class="header-anchor" href="#container-模式" aria-label="Permalink to &quot;container 模式&quot;">​</a></h3><h3 id="none-模式" tabindex="-1">none 模式 <a class="header-anchor" href="#none-模式" aria-label="Permalink to &quot;none 模式&quot;">​</a></h3><h2 id="防火墙配置" tabindex="-1">防火墙配置 <a class="header-anchor" href="#防火墙配置" aria-label="Permalink to &quot;防火墙配置&quot;">​</a></h2>',11)),a(t),a(r)])}const q=n(s,[["render",d]]);export{f as __pageData,q as default};
