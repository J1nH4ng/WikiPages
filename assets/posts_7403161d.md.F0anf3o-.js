import{_ as n,C as o,c as i,o as l,aD as c,G as t}from"./chunks/framework.Cvnqwbck.js";const f=JSON.parse('{"title":"Docker 网络配置详解","description":"Docker 网络配置详解文档","frontmatter":{"title":"Docker 网络配置详解","editLink":true,"description":"Docker 网络配置详解文档","layout":"doc","head":[["meta",{"name":"keywords","content":"Linux, Docker, Cloud, CNCF, Network"}]],"outline":"deep","prev":{"text":null,"link":null},"next":{"text":null,"link":null}},"headers":[],"relativePath":"posts/7403161d.md","filePath":"docs/cloud/docker/docker-networks.md","lastUpdated":1744102627000}'),s={name:"posts/7403161d.md"};function d(h,e,u,k,p,b){const a=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return l(),i("div",null,[e[0]||(e[0]=c('<h1 id="docker-网络配置详解" tabindex="-1">Docker 网络配置详解 <a class="header-anchor" href="#docker-网络配置详解" aria-label="Permalink to &quot;Docker 网络配置详解&quot;">​</a></h1><p>Docker run 创建 Docker 容器时，可以使用 <code>--net</code> 选项指定容器的网络模式，Docker 主要有以下四种网络模式：</p><ul><li>bridge 模式</li><li>host 模式</li><li>container 模式</li><li>none 模式</li></ul><p>不同的模式区别详解如下。</p><h2 id="bridge-模式" tabindex="-1">bridge 模式 <a class="header-anchor" href="#bridge-模式" aria-label="Permalink to &quot;bridge 模式&quot;">​</a></h2><h2 id="host-模式" tabindex="-1">host 模式 <a class="header-anchor" href="#host-模式" aria-label="Permalink to &quot;host 模式&quot;">​</a></h2><h2 id="container-模式" tabindex="-1">container 模式 <a class="header-anchor" href="#container-模式" aria-label="Permalink to &quot;container 模式&quot;">​</a></h2><h2 id="none-模式" tabindex="-1">none 模式 <a class="header-anchor" href="#none-模式" aria-label="Permalink to &quot;none 模式&quot;">​</a></h2>',8)),t(a),t(r)])}const _=n(s,[["render",d]]);export{f as __pageData,_ as default};
