import{f as l,D as e,c as r,o as p,as as d,k as c,H as s,a as t,w as m}from"./chunks/framework.Dr7m8lqR.js";const x=JSON.parse('{"title":"Jar 包的启动配置","description":"Jar 包的启动配置文档","frontmatter":{"title":"Jar 包的启动配置","editLink":true,"description":"Jar 包的启动配置文档","layout":"doc","head":[["meta",{"name":"keywords","content":"Backend, Java, OOM"}]],"outline":"deep","prev":{"text":null,"link":null},"next":{"text":null,"link":null}},"headers":[],"relativePath":"posts/abab10b0.md","filePath":"docs/web/java-command.md","lastUpdated":1748275159000}'),u={name:"posts/abab10b0.md"};function b(h,a,k,v,J,f){const n=e("sapn"),o=e("NolebaseGitContributors"),i=e("NolebaseGitChangelog");return p(),r("div",null,[a[3]||(a[3]=d('<h1 id="jar-包的启动配置" tabindex="-1">Jar 包的启动配置 <a class="header-anchor" href="#jar-包的启动配置" aria-label="Permalink to &quot;Jar 包的启动配置&quot;">​</a></h1><p>对于 Java 编写的 Jar 包来说，简单的启动命令为：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">java</span><span style="--shiki-light:#286983;--shiki-dark:#3E8FB0;"> -jar</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> /path/to/your/jarfile.jar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>而对于一些在朋友圈，公众号中广泛传播的一些诸如：【性能优化宝典】、【大厂优化秘籍】、【X 大优化技巧】之类的文章，被一些刚开始接触 Java 性能优化的读者奉为圭臬，但是实际的情况是什么呢？</p><ul><li>JVM 并没有一个神奇的开关，让你的代码变得“更快”、</li><li>没有让 JAVA 运行更快的“秘诀与技巧”</li><li>没有对你隐藏的秘密算法</li></ul>',5)),c("p",null,[a[1]||(a[1]=t("所谓的性能优化只不过是一门实验科学：")),s(n,{class:"marker-evy"},{default:m(()=>a[0]||(a[0]=[t("JVM 的性能调优是技术、方法论、可测的量和工具的综合")])),_:1}),a[2]||(a[2]=t("。它的目的是以系统所有者或者用户所期望的方式产生可以策略的输出。更进一步，如果考虑到人的因素，性能优化是坚实的经验主义和软性的人类心理学的奇异组合。重点在于，一方面是可观测指标的绝对数字，另一方面是最终用户和干系人如何看待这些数字。"))]),s(o),s(i)])}const C=l(u,[["render",b]]);export{x as __pageData,C as default};
